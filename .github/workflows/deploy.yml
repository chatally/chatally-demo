name: Deploy to remote server via scp/ssh

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to remote
    runs-on: ubuntu-latest
    # needs: tests // we might want to run some tests before deploying?
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure SSH in runner
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/chatally_id
          chmod 600 ~/.ssh/chatally_id
          cat >~/.ssh/config <<END
          Host REMOTEHOST
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/chatally_id
            StrictHostKeyChecking no
          END

      - name: Write variables to env file
        env:
          WA_PHONE_NUMBER_ID: ${{ secrets.WA_PHONE_NUMBER_ID }}
          WA_ACCESS_TOKEN: ${{ secrets.WA_ACCESS_TOKEN }}
          WA_VERIFY_TOKEN: ${{ secrets.WA_VERIFY_TOKEN }}
          WA_SECRET: ${{ secrets.WA_SECRET }}
        run: |
          cat >app/.env <<END
          WHATSAPP_CLOUD_GRAPHAPI_PHONE_NUMBER_ID=$WA_PHONE_NUMBER_ID
          WHATSAPP_CLOUD_GRAPHAPI_ACCESS_TOKEN=$WA_ACCESS_TOKEN
          WHATSAPP_CLOUD_WEBHOOKS_VERIFY_TOKEN=$WA_VERIFY_TOKEN
          WHATSAPP_CLOUD_WEBHOOKS_SECRET=$WA_SECRET
          END

      - name: Copy sources
        run: |
          scp -r docker-compose.yml Dockerfile restart-server.sh app REMOTEHOST:~/src

      - name: Restart server (remotely)
        run: |
          ssh REMOTEHOST '~/src/restart-server.sh'
